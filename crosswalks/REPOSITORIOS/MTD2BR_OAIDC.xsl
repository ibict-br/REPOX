<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2013r2sp2

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns0="http://oai.ibict.br/mtd2-br/" xmlns:agt="http://www.altova.com/Mapforce/agt" xmlns:xs="http://www.w3.org/2001/XMLSchema" exclude-result-prefixes="ns0 agt xs">
	<xsl:output method="xml" encoding="UTF-8" indent="yes"/>
	<xsl:template name="agt:var3_MapTooai_dc_function">
		<xsl:param name="par0"/>
		<dc:format xmlns:dc="http://purl.org/dc/elements/1.1/">
			<xsl:value-of select="string($par0/ns0:URL/@Formato)"/>
		</dc:format>
	</xsl:template>
	<xsl:template match="/">
		<oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/">
			<xsl:attribute name="xsi:schemaLocation" namespace="http://www.w3.org/2001/XMLSchema-instance">http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd</xsl:attribute>
			<xsl:for-each select="ns0:mtd2br/ns0:Titulo">
				<dc:title>
					<xsl:value-of select="string(.)"/>
				</dc:title>
			</xsl:for-each>
			<xsl:for-each select="ns0:mtd2br/ns0:Autor">
				<dc:creator>
					<xsl:value-of select="string(ns0:Nome)"/>
				</dc:creator>
			</xsl:for-each>
			<xsl:for-each select="ns0:mtd2br/ns0:Assunto">
				<dc:subject>
					<xsl:value-of select="string(.)"/>
				</dc:subject>
			</xsl:for-each>
			<xsl:for-each select="ns0:mtd2br/ns0:Resumo">
				<dc:description>
					<xsl:value-of select="string(.)"/>
				</dc:description>
			</xsl:for-each>
			<xsl:for-each select="ns0:mtd2br/ns0:BibliotecaDepositaria/ns0:Nome">
				<dc:publisher>
					<xsl:value-of select="string(.)"/>
				</dc:publisher>
			</xsl:for-each>
			<xsl:for-each select="ns0:mtd2br/ns0:Contribuidor">
				<dc:contributor>
					<xsl:value-of select="string(ns0:Nome)"/>
				</dc:contributor>
			</xsl:for-each>
			<xsl:for-each select="ns0:mtd2br">
				<dc:date>
					<xsl:value-of select="string(ns0:DataDefesa)"/>
				</dc:date>
			</xsl:for-each>
<!--
			<xsl:for-each select="ns0:mtd2br">
				<dc:type>
					<xsl:value-of select="string(ns0:Titulacao)"/>
				</dc:type>
			</xsl:for-each> -->


		<xsl:choose>
		        <xsl:when test="contains(ns0:mtd2br/ns0:Titulacao, 'Mestre')">
		            	<dc:type>
					<xsl:text>masterThesis</xsl:text>
				</dc:type>
		        </xsl:when>
		        <xsl:when test="contains(ns0:mtd2br/ns0:Titulacao, 'Doutor')">
		            	<dc:type>
					<xsl:text>doctoralThesis</xsl:text>
				</dc:type>
		        </xsl:when>

		        <xsl:otherwise>
		            <xsl:if test="string(ns0:mtd2br/ns0:Titulacao)">       
				<dc:type>
					<xsl:value-of select="string(ns0:mtd2br/ns0:Titulacao)"/>
				</dc:type>
		            </xsl:if>
		        </xsl:otherwise>

		  </xsl:choose>


			<xsl:for-each select="ns0:mtd2br/ns0:Arquivo">
				<xsl:variable name="var1_Formato">
					<xsl:if test="ns0:URL/@Formato">
						<xsl:value-of select="'1'"/>
					</xsl:if>
				</xsl:variable>
				<xsl:variable name="var2_resultof_exists" select="boolean(string($var1_Formato))"/>
				<xsl:if test="string((string($var2_resultof_exists) != 'false')) != 'false'">
					<xsl:call-template name="agt:var3_MapTooai_dc_function">
						<xsl:with-param name="par0" select="."/>
					</xsl:call-template>
				</xsl:if>
			</xsl:for-each>
			<xsl:for-each select="ns0:mtd2br">
				<dc:identifier>
					<xsl:value-of select="string(ns0:Controle/ns0:IdentificacaoDocumento)"/>
				</dc:identifier>
			</xsl:for-each>
			<xsl:for-each select="ns0:mtd2br/ns0:Arquivo">
				<dc:source>
					<xsl:value-of select="string(ns0:URL)"/>
				</dc:source>
			</xsl:for-each>
			<xsl:for-each select="ns0:mtd2br">
				<dc:language>
					<xsl:value-of select="string(ns0:Idioma)"/>
				</dc:language>
			</xsl:for-each>
			<xsl:for-each select="ns0:mtd2br/ns0:Cobertura">
				<dc:coverage>
					<xsl:value-of select="string(.)"/>
				</dc:coverage>
			</xsl:for-each>
			<xsl:for-each select="ns0:mtd2br/ns0:Direitos">
				<dc:rights>
					<xsl:value-of select="string(.)"/>
				</dc:rights>
			</xsl:for-each>
		</oai_dc:dc>
	</xsl:template>
</xsl:stylesheet>
