<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2013r2sp2

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="2.0" 
xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
xmlns:ns0="http://oai.ibict.br/mtd2-br/" 
xmlns:vmf="http://www.altova.com/MapForce/UDF/vmf" 
xmlns:xs="http://www.w3.org/2001/XMLSchema" 
xmlns:fn="http://www.w3.org/2005/xpath-functions" 
exclude-result-prefixes="ns0 vmf xs fn ">
	
	<xsl:variable name="smallcase" select="'abcdefghijklmnopqrstuvwxyzàáâãäåæçèéêëìíîïðñòóôõö÷øùüúþÿ'" />	
	<xsl:variable name="uppercase" select="'ABCDEFGHIJKLMNOPQRSTUVWXYZÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÜÚÞß'" />	

	<xsl:template name="vmf:vmf1_inputtoresult">
		<xsl:param name="input" select="()"/>
		<xsl:choose>
			<xsl:when test="$input='Orientador'">
				<xsl:value-of select="'advisor'"/>
			</xsl:when>
			<xsl:when test="$input='Co-Orientador'">
				<xsl:value-of select="'advisor-co'"/>
			</xsl:when>
			<xsl:when test="$input='Presidente da Banca'">
				<xsl:value-of select="'referees'"/>
			</xsl:when>
			<xsl:when test="$input='Vice-Presidente da Banca'">
				<xsl:value-of select="'referees'"/>
			</xsl:when>
			<xsl:when test="$input='Membro da Banca'">
				<xsl:value-of select="'referees'"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="'others'"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	
	<xsl:template name="vmf:vmf2_inputtoresult">
			<xsl:param name="input" select="()"/>
			<xsl:if test="contains($input,'PT')">
				<xsl:value-of select="'por'"/>
			</xsl:if>
			<xsl:if test="contains($input,'EN')">
				<xsl:value-of select="'eng'"/>
			</xsl:if>
			<xsl:if test="contains($input,'ES')">
				<xsl:value-of select="'spa'"/>
			</xsl:if>
			<xsl:if test="contains($input,'FR')">
				<xsl:value-of select="'fra'"/>
			</xsl:if>
			<xsl:if test="contains($input,'IT')">
				<xsl:value-of select="'ita'"/>
			</xsl:if>
			<xsl:if test="contains($input,'DE')">
				<xsl:value-of select="'deu'"/>
			</xsl:if>
			<xsl:if test="contains($input,'GER')">
				<xsl:value-of select="'deu'"/>
			</xsl:if>
			<xsl:if test="contains($input,'JA')">
				<xsl:value-of select="'jpn'"/>
			</xsl:if>
	</xsl:template>
	
	<xsl:template name="vmf:vmf3_inputtoresult">
		<xsl:param name="input" select="()"/>
		<xsl:choose>
			<xsl:when test="$input='Doutor'">
				<xsl:value-of select="'doctoralThesis'"/>
			</xsl:when>
			<xsl:when test="$input='Mestre'">
				<xsl:value-of select="'masterThesis'"/>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	
	<xsl:template name="vmf:vmf4_inputtoresult">
		<xsl:param name="input" select="()"/>
		<xsl:choose>
			<xsl:when test="$input='pt'">
				<xsl:value-of select="true()"/>
			</xsl:when>
			<xsl:when test="$input='por'">
				<xsl:value-of select="true()"/>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	
	<xsl:template name="vmf:vmf6_inputtoresult">
		<xsl:param name="input1" select="()"/>
		<xsl:choose>
			<xsl:when test="$input1='eng'">
				<xsl:value-of select="true()"/>
			</xsl:when>
			<xsl:when test="$input1='spa'">
				<xsl:value-of select="true()"/>
			</xsl:when>
			<xsl:when test="$input1='fra'">
				<xsl:value-of select="true()"/>
			</xsl:when>
			<xsl:when test="$input1='deu'">
				<xsl:value-of select="true()"/>
			</xsl:when>
			<xsl:when test="$input1='ita'">
				<xsl:value-of select="true()"/>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	
	<xsl:template name="vmf:vmf8_inputtoresult">
		<xsl:param name="input" select="()"/>
		<xsl:choose>
			<xsl:when test="$input='pdf'">
				<xsl:value-of select="'application/pdf'"/>
			</xsl:when>
			<xsl:when test="$input='PDF'">
				<xsl:value-of select="'application/pdf'"/>
			</xsl:when>
		</xsl:choose>
	</xsl:template>
	<xsl:output method="xml" encoding="UTF-8" indent="yes"/>
				
	<xsl:template match="/">

		<xsl:variable name="var1_mtdbr" as="node()?" select="ns0:mtd2br"/>
		
		<mtd3-br:mtd3br xsi:schemaLocation="http://10.0.0.173/mtd3br/mtd3-br.xsd" xmlns:mtd3-br="http://10.0.0.173/mtd3br/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	
			<xsl:for-each select="$var1_mtdbr/ns0:Autor">
					<xsl:choose>
						<xsl:when test="fn:exists($var1_mtdbr/ns0:Autor/ns0:Citacao)">
								<mtd3-br:contributorAuthor>
									<xsl:value-of select="$var1_mtdbr/ns0:Autor/ns0:Citacao[1]/text()"/>
								</mtd3-br:contributorAuthor>		
							
						</xsl:when>
						<xsl:otherwise>
						<mtd3-br:contributorAuthor>
							<xsl:sequence select="fn:string(ns0:Nome)"/>
						</mtd3-br:contributorAuthor>		

						</xsl:otherwise>
					</xsl:choose>

			</xsl:for-each>
			
			<xsl:variable name="nomesContributores" select="''" />
			

			<xsl:for-each select="$var1_mtdbr/ns0:Contribuidor[@Papel='Orientador']">
				<xsl:variable name="var2_Papel" as="node()?" select="@Papel"/>
				<!-- <xsl:variable name="var_ContributorCitacao" as="node()?" select="self::$var1_mtdbr/ns0:Contribuidor/ns0:Citacao"/> -->
					
				<!--	<xsl:variable name="nomesContributor" select="fn:concat($nomesContributor,' ',fn:string(ns0:Nome))" /> -->
				<!--	<xsl:variable name="nomesContributor" select="fn:string(ns0:Nome)" /> -->
					
					<!--	<xsl:variable name="citacoesAuthor" select="fn:concat($nomesContributor,' ',fn:string(ns0:Citacao))" /> -->
					<xsl:choose>
						<xsl:when test="$var2_Papel='Orientador'">
							<mtd3-br:contributorAdvisor>
								<xsl:choose>
									<xsl:when test="fn:exists(ns0:Citacao)">
										<xsl:sequence select="fn:string(ns0:Citacao)"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:sequence select="fn:string(ns0:Nome)"/>
									</xsl:otherwise>
								</xsl:choose>
							</mtd3-br:contributorAdvisor>
						</xsl:when>
						<xsl:when test="$var2_Papel='Co-Orientador'">
							<mtd3-br:contributorAdvisor-co>
								<xsl:choose>
									<xsl:when test="fn:exists(ns0:Citacao)">
										<xsl:sequence select="fn:string(ns0:Citacao)"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:sequence select="fn:string(ns0:Nome)"/>
									</xsl:otherwise>
								</xsl:choose>
							</mtd3-br:contributorAdvisor-co>							
						</xsl:when>
						<xsl:when test="$var2_Papel='Presidente da Banca'">
							<mtd3-br:contributorReferees>
								<xsl:choose>
									<xsl:when test="fn:exists(ns0:Citacao)">
										<xsl:sequence select="fn:string(ns0:Citacao)"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:sequence select="fn:string(ns0:Nome)"/>
									</xsl:otherwise>
								</xsl:choose>
							</mtd3-br:contributorReferees>										
						</xsl:when>
						<xsl:when test="$var2_Papel='Vice-Presidente da Banca'">
							<mtd3-br:contributorReferees>
								<xsl:choose>
									<xsl:when test="fn:exists(ns0:Citacao)">
										<xsl:sequence select="fn:string(ns0:Citacao)"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:sequence select="fn:string(ns0:Nome)"/>
									</xsl:otherwise>
								</xsl:choose>
							</mtd3-br:contributorReferees>	
						</xsl:when>
						<xsl:when test="$var2_Papel='Membro da Banca'">
							<mtd3-br:contributorReferees>
								<xsl:choose>
									<xsl:when test="fn:exists(ns0:Citacao)">
										<xsl:sequence select="fn:string(ns0:Citacao)"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:sequence select="fn:string(ns0:Nome)"/>
									</xsl:otherwise>
								</xsl:choose>
							</mtd3-br:contributorReferees>	
						</xsl:when>
						<xsl:otherwise>
							<mtd3-br:contributorReferees>
								<xsl:choose>
									<xsl:when test="fn:exists(ns0:Citacao)">
										<xsl:sequence select="fn:string(ns0:Citacao)"/>
									</xsl:when>
									<xsl:otherwise>
										<xsl:sequence select="fn:string(ns0:Nome)"/>
									</xsl:otherwise>
								</xsl:choose>
							</mtd3-br:contributorReferees>	
						</xsl:otherwise>
					</xsl:choose>

		</xsl:for-each>

		</mtd3-br:mtd3br>
	</xsl:template>
</xsl:stylesheet>
