<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2013r2sp2

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="2.0" 
xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
xmlns:ns0="http://oai.ibict.br/mtd2-br/" 
xmlns:vmf="http://www.altova.com/MapForce/UDF/vmf" 
xmlns:xs="http://www.w3.org/2001/XMLSchema" 
xmlns:fn="http://www.w3.org/2005/xpath-functions" 
exclude-result-prefixes="ns0 vmf xs fn">
	
		
	<xsl:variable name="smallcase" select="'abcdefghijklmnopqrstuvwxyzàáâãäåæçèéêëìíîïðñòóôõö÷øùüúþÿ'" />	
	<xsl:variable name="uppercase" select="'ABCDEFGHIJKLMNOPQRSTUVWXYZÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÜÚÞß'" />	



	<xsl:output method="xml" encoding="UTF-8" indent="yes"/>
				
	<xsl:template match="/">

		<xsl:variable name="var1_mtdbr" as="node()?" select="ns0:mtd2br"/>
		
		
		<oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd">

	<!-- EXISTÊNCIA TEXTO COMPLETO -->
		

		
		<!-- TÍTULO -->
		
		<xsl:for-each select="$var1_mtdbr/ns0:Titulo">
			<dc:title>
				<xsl:value-of select="fn:normalize-space($var1_mtdbr/ns0:Titulo)"/>
			</dc:title>
		</xsl:for-each>
		
		<!--  AUTOR -->
		
		<xsl:if test="$var1_mtdbr/ns0:Autor/ns0:Nome">
			<dc:creator>
				<xsl:value-of select="fn:normalize-space($var1_mtdbr/ns0:Autor/ns0:Nome)"/>
			</dc:creator>
		</xsl:if>
		
		<!--  DATA DE DEFESA -->

		<xsl:for-each select="$var1_mtdbr">
			<dc:date>
				<xsl:sequence select="xs:string(fn:string(ns0:DataDefesa))"/>
			</dc:date>
		</xsl:for-each>
		
		
		<!-- INSTITUIÇÃO -->
		
		<xsl:for-each select="$var1_mtdbr">
			<dc:publisher>
				<xsl:sequence select="fn:string(ns0:InstituicaoDefesa/ns0:Nome)"/>
			</dc:publisher>
		</xsl:for-each>
		
	<xsl:if test="not(fn:exists($var1_mtdbr/ns0:Arquivo))">
		<dc:identifier>
			<xsl:text>SEM_ARQUIVO</xsl:text>
		</dc:identifier>
	</xsl:if>
		

		</oai_dc:dc>
	</xsl:template>
</xsl:stylesheet>
