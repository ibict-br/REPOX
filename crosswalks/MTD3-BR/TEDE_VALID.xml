<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2013r2sp2

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="2.0" 
xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
xmlns:ns0="http://oai.ibict.br/mtd2-br/" 
xmlns:vmf="http://www.altova.com/MapForce/UDF/vmf" 
xmlns:xs="http://www.w3.org/2001/XMLSchema" 
xmlns:fn="http://www.w3.org/2005/xpath-functions" 
xmlns:dim="http://www.dspace.org/xmlns/dspace/dim"
exclude-result-prefixes="ns0 vmf xs dim fn">
	
		
	<xsl:variable name="smallcase" select="'abcdefghijklmnopqrstuvwxyzàáâãäåæçèéêëìíîïðñòóôõö÷øùüúþÿ'" />	
	<xsl:variable name="uppercase" select="'ABCDEFGHIJKLMNOPQRSTUVWXYZÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÜÚÞß'" />	



	<xsl:output method="xml" encoding="UTF-8" indent="yes"/>
				
	<xsl:template match="/">

		<xsl:variable name="var1_mtdbr" as="node()?" select="ns0:mtd2br"/>
		
		
	<dim:dim xmlns:dim="http://www.dspace.org/xmlns/dspace/dim" xmlns:doc="http://www.lyncode.com/xoai" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.dspace.org/xmlns/dspace/dim http://www.dspace.org/schema/dim.xsd">
	
		<!-- TIPO DE DOCUMENTO -->
	
		<xsl:for-each select="$var1_mtdbr/ns0:Grau"> 
			<dim:field element="type" mdschema="dc">
				<xsl:sequence select="fn:string(.)"/> 
			</dim:field>
		</xsl:for-each> 
	
        <!-- TÍTULO -->

	
		<xsl:for-each select="$var1_mtdbr/ns0:Titulo">
			<dim:field element="title" mdschema="dc">
			<!-- <xsl:value-of select="fn:normalize-space($var1_mtdbr/ns0:Titulo)"/> -->
				<xsl:sequence select="fn:string(.)"/> 
			</dim:field>
		</xsl:for-each>

		
		<!--  AUTOR -->
	
		<xsl:for-each select="$var1_mtdbr/ns0:Autor/ns0:Nome"> 
			<dim:field element="contributor" mdschema="dc" qualifier="author">
				<xsl:sequence select="fn:string(.)"/> 
			</dim:field>
		</xsl:for-each> 
		
		<!--  DATA DE DEFESA

		<xsl:for-each select="$var1_mtdbr/ns0:DataDefesa">
			<dim:field element="date" mdschema="dc" qualifier="issued">
				<xsl:sequence select="fn:string(.)"/> 
			</dim:field>
		</xsl:for-each>  -->
		
		
		<!-- INSTITUIÇÃO -->
		
		<xsl:for-each select="$var1_mtdbr/ns0:InstituicaoDefesa/ns0:Nome">
			<dim:field element="publisher" mdschema="dc">
				<xsl:sequence select="fn:string(.)"/>
			</dim:field>
		</xsl:for-each>
		
		<!-- TIPO DE ACESSO -->

		<xsl:for-each select="$var1_mtdbr/ns0:Direitos"> 
			<dim:field element="rights" mdschema="dc">
			<xsl:sequence select="fn:string(.)"/> 
			</dim:field>
		</xsl:for-each> 
		
		
	<!-- VALIDAÇÃO -->
		
	<xsl:choose>
	
	<!-- Título -->
	
	<xsl:when test="not(fn:exists($$var1_mtdbr/ns0:Titulo))">
		<dim:field element="description" mdschema="dc">
			<xsl:text>Sem título</xsl:text>
		</dim:field>
	</xsl:when>
	
	<!-- Autor -->
	
	<xsl:when test="not(fn:exists($var1_mtdbr/ns0:Autor/ns0:Nome))">
		<dim:field element="description" mdschema="dc">
			<xsl:text>Sem nome do autor</xsl:text>
		</dim:field>
	</xsl:when>
	
	<xsl:when test="not(fn:exists($var1_mtdbr/ns0:Autor/ns0:Lattes))">
		<dim:field element="description" mdschema="dc">
			<xsl:text>Sem currículo Lattes do autor</xsl:text>
		</dim:field>
	</xsl:when>
	
	<!-- Orientador	-->
	
		<xsl:when test="not(fn:exists($var1_mtdbr/ns0:Contribuidor[@Papel='Orientador']/ns0:Nome))">
		<dim:field element="description" mdschema="dc">
			<xsl:text>Sem nome do autor</xsl:text>
		</dim:field>
	</xsl:when>
	
	<xsl:when test="not(fn:exists($var1_mtdbr/ns0:Contribuidor[@Papel='Orientador']/ns0:Lattes))">
		<dim:field element="description" mdschema="dc">
			<xsl:text>Sem currículo Lattes do autor</xsl:text>
		</dim:field>
	</xsl:when>
	
	<!-- Resumo -->
	
	<xsl:when test="not(fn:exists($var1_mtdbr/ns0:Resumo))">
		<dim:field element="description" mdschema="dc">
			<xsl:text>Sem resumo</xsl:text>
		</dim:field>
	</xsl:when>
	
	<!-- Data de defesa -->
	
	<xsl:when test="not(fn:exists($var1_mtdbr/ns0:InstituicaoDefesa/ns0:Nome))">
		<dim:field element="description" mdschema="dc">
			<xsl:text>Sem nome da instituição</xsl:text>
		</dim:field>
	</xsl:when>
	
	
	<!-- Data de defesa -->
	
	<xsl:when test="not(fn:exists($var1_mtdbr/ns0:DataDefesa))">
		<dim:field element="description" mdschema="dc">
			<xsl:text>Sem data de defesa</xsl:text>
		</dim:field>
	</xsl:when>
	
	<!-- Texto completo -->
	
	<xsl:when test="not(fn:exists($var1_mtdbr/ns0:Arquivo))">
		<dim:field element="description" mdschema="dc">
			<xsl:text>Sem texto completo</xsl:text>
		</dim:field>
	</xsl:when>
	
	
	<xsl:otherwise>
		<dim:field element="description" mdschema="dc">
			<xsl:text>OK</xsl:text>
		</dim:field>
	</xsl:otherwise>
	</xsl:choose>
		
<!--  ORIENTADOR -->
		
		<xsl:if test="$var1_mtdbr/ns0:Contribuidor[@Papel='Orientador'][position()=1]/ns0:Nome">
		
		$var1_mtdbr/ns0:Autor/ns0:Lattes
		
			<!--  CO-ORIENTADORES -->
	
		<xsl:if test="$var1_mtdbr/ns0:Contribuidor[@Papel='Co-Orientador'][position()=1]/ns0:Nome">
		
		
		<!--  MEMBROS DA BANCA -->

		<xsl:if test="$var1_mtdbr/ns0:Contribuidor[@Papel='Membro da Banca'][position()=1]/ns0:Nome">
		
	</dim:dim>
	</xsl:template>
</xsl:stylesheet>
